-- Tables can be explicitly nested within a schema
schema myschema (
  table user ()
)

-- Or they can be defined at the top level and rely on search_path for discovery
table user()

-- Records only need to specify required columns, allowing the database
-- to populate any default values
table mytable (

  -- Records can be given names that must be unique within their parent table scope
  myrecord (

    -- Boolean literals are lowercased and only support `true` and `false`
    col1 true

    -- Numbers can be formatted for readability, but they must conform to PostgreSQL
    -- formatting, ie. 123__456 is invalid as is 123_._456
    col2 123_456.987_654

    -- Single quotes in text strings are escaped as they are in SQL
    col3 'isn''t this grand?'

    -- Any type with a text representation, eg. ltree, can be expressed
    -- as a string literal much as they would be in SQL
    col4 '123.456.789'

    -- Simple `SELECT` statements can be used by omitting the `SELECT` keyword
    -- and enclosing with backticks. The result must only be a single row and column.
    col5 `ts from (select current_timestamp as ts) q`
  )

  -- Or they can be anonymous, with or without the `_` identifier
  _ (
    col1 false
  )
  (
    col1 true
  )

  -- All records can also be collapsed on a single line
  rec (col1 true, col2 123, col3 'hello')
  _ (col1 true, col2 37)
  (col1 false, col3 'nifty, right?')
)

-- Quoted identifiers are supported as well, when necessary
schema "bad.schema.name" as s1 (
  table "bad.table.name" as t1 (
    "bad.column.name" 123
  )
)
